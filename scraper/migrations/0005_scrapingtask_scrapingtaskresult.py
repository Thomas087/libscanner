# Generated by Django 5.2.7 on 2025-10-22 16:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("scraper", "0004_governmentdocument_is_icpe"),
    ]

    operations = [
        migrations.CreateModel(
            name="ScrapingTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        help_text="Celery task ID", max_length=255, unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="scrape_animal_keywords",
                        help_text="Task name",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROGRESS", "In Progress"),
                            ("SUCCESS", "Completed Successfully"),
                            ("FAILURE", "Failed"),
                            ("REVOKED", "Cancelled"),
                            ("RETRY", "Retrying"),
                        ],
                        default="PENDING",
                        help_text="Current task status",
                        max_length=20,
                    ),
                ),
                (
                    "keywords",
                    models.JSONField(default=list, help_text="Keywords to search for"),
                ),
                (
                    "region_filter",
                    models.CharField(
                        blank=True, help_text="Region filter", max_length=100, null=True
                    ),
                ),
                (
                    "prefecture_filter",
                    models.CharField(
                        blank=True,
                        help_text="Prefecture filter",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "output_file",
                    models.CharField(
                        blank=True,
                        help_text="Output file path",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "output_format",
                    models.CharField(
                        default="pretty", help_text="Output format", max_length=20
                    ),
                ),
                (
                    "current_operation",
                    models.IntegerField(
                        default=0, help_text="Current operation number"
                    ),
                ),
                (
                    "total_operations",
                    models.IntegerField(
                        default=0, help_text="Total operations to perform"
                    ),
                ),
                (
                    "current_prefecture",
                    models.CharField(
                        blank=True,
                        help_text="Currently processing prefecture",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "current_keyword",
                    models.CharField(
                        blank=True,
                        help_text="Currently processing keyword",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "total_items_found",
                    models.IntegerField(default=0, help_text="Total items found"),
                ),
                (
                    "results_summary",
                    models.JSONField(
                        blank=True, default=dict, help_text="Summary of results"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the task was created"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, help_text="When the task started", null=True
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When the task completed", null=True
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, help_text="When the task was last updated"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if task failed", null=True
                    ),
                ),
                (
                    "traceback",
                    models.TextField(
                        blank=True,
                        help_text="Error traceback if task failed",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Scraping Task",
                "verbose_name_plural": "Scraping Tasks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ScrapingTaskResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prefecture_name",
                    models.CharField(
                        help_text="Name of the prefecture", max_length=100
                    ),
                ),
                (
                    "region_name",
                    models.CharField(help_text="Name of the region", max_length=100),
                ),
                (
                    "keyword",
                    models.CharField(
                        help_text="Keyword that was searched", max_length=100
                    ),
                ),
                (
                    "items_found",
                    models.IntegerField(
                        default=0,
                        help_text="Number of items found for this keyword/prefecture combination",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this result was created"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        help_text="Associated scraping task",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="scraper.scrapingtask",
                    ),
                ),
            ],
            options={
                "verbose_name": "Scraping Task Result",
                "verbose_name_plural": "Scraping Task Results",
                "ordering": ["-items_found"],
                "unique_together": {("task", "prefecture_name", "keyword")},
            },
        ),
    ]
